name: Test and Release Strike API
on:
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.7"
  PROJECT_FOLDER: strike_api
  TEST_FOLDER: tests
  
jobs:
  Quality:
    runs-on: ubuntu-latest
    env:
      STRIKE_API_KEY: ${{ secrets.STRIKE_DEV_KEY }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Configure poetry & Install dependencies
      run: |
       python -m pip install --upgrade pip
       pip install poetry && poetry install
    
    - name: View poetry version
      run: poetry --version
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Security Analysis with bandit
      run: |
        # stop pipeline if level 3 vulnerability found
        poetry run bandit -r -lll ${{env.PROJECT_FOLDER}} ${{env.TEST_FOLDER}}

    - name: Test with pytest
      run: |
        poetry run python -m pytest -v ${{env.TEST_FOLDER}}
    
  Release:
    needs: Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
      - name: Publish strike-api
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}